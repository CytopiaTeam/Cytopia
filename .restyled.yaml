# Default Restyler Configuration
#
# All keys are optional and default as shown. All list values can also be given
# a single value, to indicate a single-element list.
#
####

# Do anything at all?
enabled: true

# Patterns to exclude from all Restylers
#
# By default, we ignore directories that are often checked-in but rarely
# represent project code. Some globs are slightly complicated to match paths
# within directories of names appearing at any depth.
#
# This behavior can be disabled in your project with:
#
#   exclude: []
#
exclude:
  - "**/node_modules/**/*"
  - "**/vendor/**/*"
  - ".github/workflows/**/*" # https://github.com/restyled-io/restyler/issues/73

# Push the style fixes directly to the original PR
#
# This setting implies pull_requests: false for origin PRs, and has no effect on
# forked PRs (since we can't push to those).
#
auto: false

# Download remote files before restyling
#
# Example:
#
#   remote_files:
#     - url: https://raw.github.com/.../hlint.yaml
#       path: .hlint.yaml
#
# Files must be publicly accessible.
#
remote_files: []

# Open Restyle PRs?
pull_requests: true

# Leave comments on the original PR linking to the Restyle PR?
comments: true

# Set commit statuses?
#
# A single value can be used to disable/enable all:
#
#   statuses: false
#
# Or separate values as shown in the below defaults:
#
statuses:
  # Red status in the case of differences found
  differences: true
  # Green status in the case of no differences found
  no_differences: true
  # Red status if we encounter errors restyling
  error: true

# Request review on the Restyle PR?
#
# Possible values:
#
#   author: From the author of the original PR
#   owner:  From the owner of the base repository
#   none:   Don't
#
# One value will apply to both origin and forked PRs:
#
#   request_review: author
#
# but you can also specify separate values:
#
#   request_review:
#     origin: author
#     forked: owner
#
request_review: none

# Add labels to any created Restyle PRs
#
# These can be used to tell other automation to avoid our PRs.
#
#   labels:
#     - pullassigner-ignore
#
labels: []

# Labels to ignore
#
# PRs with any of these labels will be ignored by Restyled.
#
ignore_labels:
  - restyled-ignore

# Version of the set of Restylers to run
#
# This should correspond to a ref on the restyled-io/restylers repository,
# usually it's a tag that is a date of when that set was released. You could
# re-specify the default in your own config if you prefer to avoid update
# surprises.
#
#restylers_version: "20200331"

# Restylers to run, and how
#
# Setting this key to null accepts the defaults of the restylers_version named
# above, including which Restylers to run.
#
# Restylers can be specified in three ways:
#
# A string, which means to run that Restyler with all defaults
#
#   restylers:
#     - prettier
#
# A single key, that is a name, and override value:
#
#   restylers:
#     - prettier:
#         include:
#           - "**/*.js"
#
# An object with a name key
#
#   restylers:
#     - name: prettier:
#       include:
#         - "**/*.js"
#
# All three of the above are equivalent. The latter two are useful if you want
# to run the same Restyler multiple ways:
#
#   restylers:
#     - name: prettier
#       arguments: ["--one-thing"]
#       include: ["needs-one-thing/**/*.js"]
#
#     - name: prettier
#       arguments: ["--another"]
#       include: ["needs-another/**/*.js"]
#
# Omitted keys inherit defaults for the Restyler of that name, which can be seen
# in the wiki:
#
#   https://github.com/restyled-io/restyled.io/wiki/Available-Restylers
#
# Valid keys in the override object are:
#
# - enabled: true|false
#
#   Restylers present in the list are considered enabled and those not in the
#   list are considered not enabled, however this key is an explicit way to
#   disable a Restyler without removing it from the list (e.g. temporarily).
#
# - arguments: string or array of string
#
#   Any additional argument(s) to pass to the restyling command.
#
# - include: pattern or array of pattern
#
#   Pattern(s) to match files that should be Restyled.
#
#   NOTE: these are processed in order, so be careful you don't accidentally do
#   something like:
#
#     - "!/bad-file.hs"
#     - "**/*.hs"
#
#   which says to exclude bad-file.hs, then immediately re-includes it via the
#   wildcard.
#
# - interpreters: interpreter or array of interpreters
#
#   Extension-less files will be Restyled if they match interpreter(s) given
#   here. Valid values are sh, bash, python, and ruby.
#
# Less-commonly needed:
#
# - image: string
#
#   The Docker image to run. Can be anything publicly pull-able.
#
# - command: string or array of string
#
#   The command (and any required argument(s)) to perform the Restyling.
#

restylers: 
  - clang-format
  - whitespace
  - jq
  - prettier-yaml
  - prettier-markdown
  - black
  - shellharden
  - shfmt
