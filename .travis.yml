dist: bionic
language: cpp
services:
  - xvfb

env:
  global:
    - GITHUB_REPO: CytopiaTeam/Cytopia
    - TRAVIS: true
    - CTEST_OUTPUT_ON_FAILURE: 1
    - SCCACHE_CACHE_SIZE: 500M

matrix:
  include:
    # gcc build
    - os: linux
      name: GCC 8 Build
      python: 3.7
      compiler: gcc-8
      cache:
        directories:
          - $HOME/.cache/sccache
      addons:
        sonarcloud:
          organization: "cytopia"
          token:
            secure: "egsGg4LRt/ZXI9JQvFCwiz3U3sF6AtpX7f6Sop6umVxyTZV60DXxK8Hc7VuNI2004CPIvvsG6pLQ2feJwz6H9w1IozfH7BuRJSpo1mqZgWYdpv6IyL9ArGfn0EJM0lA52Fu1bU7qDSfMgdwjZvelhx+/MxtoEPcTgxLPfwilMelSlbVOmseuOdTXcrhxdCkLfzW7gtkK/L2EueEMddyMKst5MlweTVuDFm3KMGQd5zgmRRbeefm9SF+jC9kCFXS2y3AVw/p2NPv3gjM3vMeQ31WzRlsjBQQ+hrAKKHYEeHL12zY43oF4a7d35l3IEJIN5H0KsVKDe23mfRMCSoReHDwrxnR4T9QVmvJ2pDTccpp5bdyc9x1JfpecCHItp8oacIz/2OGnXfctP2vf5sRJ2Ja+tVJWbtsyHvJgS2GbGlWq0+15lfq91uKDgPfi+XxT9QhD/n8yDndDuXAt8V7qmuQgfWVeNzwmJJJrsF7x5hhQEaHhBzqVmHLJnTK+unvjlfd2Og8aLEaaBvlWY5m8gk9Xjm+iJwhYcDwtCw82LQJ/kZ5MyavnCsQCBZTGc4mMer66ux1j6rIzQZN4L08Wj3s6pdgg0OXqTpnCNC/n47N5/NuSTtVHai3VOmd/Gq5Qq3JsGT+dYV6PBUYIzUmjyhQ+ylWizc4Fr+DXgGdPaOk="
        apt:
          sources:
            # Official Kitware APT repository. Currently supports Bionic and Xenial.
            # More information at: https://apt.kitware.com
            - sourceline: "deb https://apt.kitware.com/ubuntu/ xenial main"
              key_url: "https://apt.kitware.com/keys/kitware-archive-latest.asc"
          packages:
            - cmake
            - gcc-8
            - ninja-build
            - doxygen
            - graphviz
            - libsdl2-dev
            - libsdl2-image-dev
            - libsdl2-ttf-dev
            - libnoise-dev
            - libopenal-dev
            - libvorbis-dev
        
      install:
       - >
        if [ "${TRAVIS_SECURE_ENV_VARS}" == "false" ]; then
          wget -nv https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
          tar xvzf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
          sudo mv ./sccache-0.2.13-x86_64-unknown-linux-musl/sccache /usr/bin
        fi;
        
      before_script:
        - cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON -DPACKAGE_MANAGER=pkgconfig -DENABLE_ANGELSCRIPT=OFF -DENABLE_MOFILEREADER=OFF .

      script:
        - >
          if [ "${TRAVIS_SECURE_ENV_VARS}" == "true" ]; then
            echo "Running sonar build";
            build-wrapper-linux-x86-64 --out-dir bw-output make -j2;
          else
            echo "Running pull request build";
            make -j2;
          fi;
        - xvfb-run -a ctest
        - >
          if [ "${TRAVIS_SECURE_ENV_VARS}" == "true" ]; then
            echo "Running the SonarCloud analysis";
            make gcov
            make copy_coverage
            sonar-scanner -Dsonar.cfamily.build-wrapper-output=bw-output
          fi;

      before_cache:
        - sccache --show-stats

    # clang build
    - os: linux
      name: CLANG 7 Build
      compiler: clang
      python: 3.7
      cache:
        directories:
          - $HOME/.cache/sccache
          - $HOME/.conan/
      addons:
        apt:
          sources:
            # Official Kitware APT repository. Currently supports Bionic and Xenial.
            # More information at: https://apt.kitware.com
            - sourceline: "deb https://apt.kitware.com/ubuntu/ xenial main"
              key_url: "https://apt.kitware.com/keys/kitware-archive-latest.asc"
          packages:
            - cmake
            - ninja-build
            - p7zip-full
            - ninja-build
            - doxygen
            - graphviz
            - clang-7
            - libasound2-dev
            - libjack-dev
            - libx11-dev
            - libxext-dev
            - libxxf86vm-dev
            - libxss-dev
            - libaudio-dev
            - libpulse-dev
            - libc++-7-dev # C++17 support in libstd++
      env:
        - DEPLOY_DOCUMENTATION=true
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"
        - TARGET="linux"

      install:
       - wget -nv https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
       - tar xvzf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
       - sudo mv ./sccache-0.2.13-x86_64-unknown-linux-musl/sccache /usr/bin

      before_script:
        - cmake -GNinja -DCMAKE_BUILD_TYPE=Release .

      script:
        - ninja
        - xvfb-run -a ctest
        - sh ./tools/CI/upload-CI-build.sh
        - if [ "${TRAVIS_BRANCH}" = "master" ]; then doxygen Doxyfile; fi

      before_cache:
        - cmake -P ./cmake/pmm.cmake /Conan /Clean
        - sccache --show-stats

    # MacOS
    - os: osx
      name: XCode 11.4 Build
      osx_image: xcode11.4
      env: 
        - TARGET=macOS
        - CONAN_USER_HOME=/tmp/conan
      language: objective-c
      python: 3.7
      cache:
        directories:
          - $HOME/Library/Caches/Mozilla.sccache
          - /tmp/conan

      install:
        - brew update
        - brew install conan sccache

      before_script:
        - cmake -DCMAKE_BUILD_TYPE=Release .

      script:
        - make
        - mkdir -p bin/Cytopia.App/Resources/resources
        - cp -pR data/resources bin/Cytopia.App/Contents/Resources/
        - cp -pR data/resources bin/resources
        - ctest
        - make copy_resources
        - make package
        - rm -rf bin/Cytopia.App/Contents/MacOS/resources
        - rm -rf bin/Cytopia.App/Resources
        - sh ./tools/CI/upload-CI-build.sh

      before_cache:
        - cmake -P ./cmake/pmm.cmake /Conan /Clean
        - sccache --show-stats

    # Android Build


    - language: android
      dist: trusty
      android:
        components:
          # Uncomment the lines below if you want to
          # use the latest revision of Android SDK Tools
          # - tools
          # - platform-tools
      
          # The BuildTools version used by your project
          - build-tools-26.0.2
      
          # The SDK version used to compile your project
          - android-26
      
          # Additional components
          - extra-google-google_play_services
          - extra-google-m2repository
          - extra-android-m2repository
      
          # Specify at least one system image,
          # add this if we want to run tests with the emulator
          # - sys-img-x86-android-26
          # - sys-img-armeabi-v7a-android-17
      install:
        - echo y | sdkmanager "ndk-bundle"
        - echo y | sdkmanager "ndk;21.1.6352462"
        - echo y | sdkmanager "cmake;3.10.2.4988404"
        - sudo apt-get -y install ninja-build
      env:
        - ANDROID_NDK_ROOT=$ANDROID_HOME/ndk-bundle
        - ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
      before_script:
        - sh ./get_dependencies.sh
      script:
        - cd platforms/android
        - ./gradlew assemble
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - $HOME/.android/build-cache
          - external/android

deploy:
  provider: pages
  skip_cleanup: true
  local_dir: Doxygen_Docs/html
  github_token: $GH_REPO_TOKEN
  verbose: true
  on:
    condition: $DEPLOY_DOCUMENTATION = "true"
    branch: master
