name: Build game

on: [ push, pull_request ]

jobs:
  build-msvc:
    name: Build Windows
    env:
      SCCACHE_DIR: C:\sccache
      SCCACHE_CACHE_SIZE: 500M
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Prepare sccache timestamp
        id: sccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: sccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: C:\sccache
          key: windows-sccache-${{ steps.sccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            windows-sccache-

      - name: Cache conan
        uses: actions/cache@v1
        with:
          key: conan-root-${{ hashFiles('**/conanfile-win.txt.in') }}
          path: ~/.conan

      - name: Install dependencies
        run: |
          choco install ninja sccache -y

          choco install conan -y -s="https://api.bintray.com/nuget/anotherfoxguy/choco-pkg"

          refreshenv
        shell: cmd

      - name: Build
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

          SET PATH=%PATH%;C:\Program Files\Conan\conan\

          cmake -GNinja -DCMAKE_BUILD_TYPE=Release .

          ninja

          sccache --show-stats
        shell: cmd

      - name: Test
        run: ctest -VV
        shell: cmd

      - name: Clean Conan pkgs
        run: |
          "C:\Program Files\Conan\conan\conan.exe" remove * -fsb
        shell: cmd

  build-gcc:
    name: Build Linux
    env:
      sccache_CACHE_SIZE: 500M
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Prepare sccache timestamp
        id: sccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: sccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: ~/.cache/sccache
          key: ubuntu-sccache-${{ steps.sccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ubuntu-sccache-

      - name: Install dependencies
        run: |
          curl "https://raw.githubusercontent.com/AnotherFoxGuy/ci-scripts/main/install-cmake.sh" | sudo bash
          curl "https://raw.githubusercontent.com/AnotherFoxGuy/ci-scripts/main/install-sccache.sh" | sudo bash
          sudo apt-get update
          sudo apt-get -y install \
                  ninja-build \
                  doxygen \
                  graphviz \
                  libsdl2-dev \
                  libsdl2-image-dev \
                  libsdl2-ttf-dev \
                  libnoise-dev \
                  libopenal-dev \
                  libvorbis-dev \
                  libpng-dev
        shell: bash

      - name: Build
        run: |
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DPACKAGE_MANAGER=pkgconfig -DENABLE_ANGELSCRIPT=OFF -DBUILD_TEST=ON .
          ninja
          sccache --show-stats
        shell: bash

      - name: Test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: ctest -VV

  build-appleclang:
    name: Build Mac
    env:
      SCCACHE_CACHE_SIZE: 500M
      CONAN_USER_HOME: /tmp/conan
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Prepare sccache timestamp
        id: sccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: sccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: ~/Library/Caches/Mozilla.sccache
          key: macos-sccache-${{ steps.sccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            macos-sccache-

      - name: Cache conan
        uses: actions/cache@v1
        with:
          key: conan-root-${{ hashFiles('**/conanfile-mac.txt.in') }}
          path: /tmp/conan

      - name: Install dependencies
        run: brew install conan sccache ninja
        shell: bash

      - name: Build
        run: |
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release .
          ninja
          mkdir -p bin/Cytopia.App/Resources/resources
          cp -pR data/resources bin/Cytopia.App/Contents/Resources/
          cp -pR data/resources bin/resources
          ninja copy_resources
          ninja package
          rm -rf bin/Cytopia.App/Contents/MacOS/resources
          rm -rf bin/Cytopia.App/Resources
          sccache --show-stats
        shell: bash

      - name: Test
        run: ctest -VV
        shell: bash

      - name: Clean Conan pkgs
        run: cmake -P ./cmake/pmm.cmake /Conan /Clean
        shell: bash
